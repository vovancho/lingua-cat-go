services:
    lcg-dictionary-backend:
        image: golang:1.24-alpine3.21
        environment:
            AUTH_PUBLIC_KEY_PATH: /run/secrets/auth_public_key
        volumes:
            - ./:/app
            - ../pkg:/pkg:/pkg
            - dictionary-backend-pkg-mod:/go/pkg/mod
        secrets:
            - auth_public_key
        working_dir: /app
        labels:
            - traefik.enable=true
            - traefik.http.routers.lcg-dictionary-backend.entrypoints=web
            - traefik.http.routers.lcg-dictionary-backend.service=lcg-dictionary-backend
            - traefik.http.routers.lcg-dictionary-backend.rule=Host(`api.lingua-cat-go.localhost`) && PathPrefix(`/dictionary/`)
            - traefik.http.routers.lcg-dictionary-backend.middlewares=strip-dictionary-prefix,cors
            - traefik.http.middlewares.strip-dictionary-prefix.stripprefix.prefixes=/dictionary
            - traefik.http.services.lcg-dictionary-backend.loadbalancer.server.port=80
            - traefik.tcp.routers.lcg-dictionary-grpc.entrypoints=dictionary-grpc
            - traefik.tcp.routers.lcg-dictionary-grpc.service=lcg-dictionary-grpc
            - traefik.tcp.routers.lcg-dictionary-grpc.rule=HostSNI(`*`)
            - traefik.tcp.services.lcg-dictionary-grpc.loadbalancer.server.port=50051
            # delve debug
        #     - traefik.tcp.routers.lcg-dictionary-backend-debug.entrypoints=web-debug
        #     - traefik.tcp.routers.lcg-dictionary-backend-debug.service=lcg-dictionary-backend-debug
        #     - traefik.tcp.routers.lcg-dictionary-backend-debug.rule=HostSNI(`*`)
        #     - traefik.tcp.services.lcg-dictionary-backend-debug.loadbalancer.server.port=2345
        # command: sh -c "go install github.com/go-delve/delve/cmd/dlv@v1.24 && go build -o /tmp/main -gcflags 'all=-N -l' cmd/main.go && dlv --listen=0.0.0.0:2345 --headless --api-version=2 --continue --accept-multiclient exec /tmp/main"
        command: sh -c "go build -o /tmp/main cmd/main.go && exec /tmp/main"
        depends_on:
            - lcg-dictionary-db
            - lcg-jaeger

    lcg-dictionary-db:
        image: postgres:17.2-alpine
        environment:
            POSTGRES_USER: dictionary
            POSTGRES_PASSWORD_FILE: /run/secrets/dictionary_db_password
            POSTGRES_DB: dictionary
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U dictionary" ]
            interval: 5s
            timeout: 5s
            retries: 5
        volumes:
            - dictionary-db:/var/lib/postgresql/data
        secrets:
            - dictionary_db_password
        labels:
            - traefik.enable=true
            - traefik.tcp.routers.lcg-dictionary-db.entrypoints=dictionary-db
            - traefik.tcp.routers.lcg-dictionary-db.service=lcg-dictionary-db
            - traefik.tcp.routers.lcg-dictionary-db.rule=HostSNI(`*`)
            - traefik.tcp.services.lcg-dictionary-db.loadbalancer.server.port=5432

volumes:
    dictionary-db:
    dictionary-backend-pkg-mod:
