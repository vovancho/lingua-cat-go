syntax = "proto3";

package dictionary;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "./gen;dictionary";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Dictionary gRPC-gateway API";
    version: "1.0";
  };
  host: "api.lingua-cat-go.localhost";
  base_path: "/dictionary";
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "BearerAuth"
      value: {
        type: TYPE_API_KEY
        name: "Authorization"
        in: IN_HEADER
        description: "Формат: Bearer {token}"
      }
    }
  }
  security: {
    security_requirement: {
      key: "BearerAuth"
      value: {}
    }
  }
};

// Сервис для работы со словарями
service DictionaryService {
  // Метод для получения случайных словарей
  rpc GetRandomDictionaries (GetRandomDictionariesRequest) returns (GetRandomDictionariesResponse) {
    option (google.api.http) = {
      get: "/grpc-gateway/v1/dictionary/random"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Dictionary"
    };
  }

  // Метод для получения словарей по ID
  rpc GetDictionaries (GetDictionariesRequest) returns (GetDictionariesResponse) {
    option (google.api.http) = {
      get: "/grpc-gateway/v1/dictionary"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Dictionary"
    };
  }
}

// Запрос для получения случайных словарей
message GetRandomDictionariesRequest {
  int32 limit = 1; // Количество возвращаемых словарей
  string lang = 2; // Язык словарей (например, "en", "ru")
}

// Ответ с массивом словарей
message GetRandomDictionariesResponse {
  repeated Dictionary dictionaries = 1; // Список словарей
}

// Запрос на получение словарей по ID
message GetDictionariesRequest {
  repeated int64 ids = 1;    // Список ID словарей
}

// Ответ с массивом словарей
message GetDictionariesResponse {
  repeated Dictionary dictionaries = 1; // Список словарей
}

// Структура словаря
message Dictionary {
  int64 id = 1;               // Идентификатор словаря
  string lang = 2;            // Язык словаря (например, "en", "ru")
  string name = 3;            // Название словаря
  int32 type = 4;             // Тип словаря (например, "noun", "verb")
  repeated Translation translations = 5; // Список переводов
  repeated Sentence sentences = 6;      // Список предложений
}

// Структура перевода
message Translation {
  int64 id = 1;               // Идентификатор словаря
  string lang = 2;            // Язык перевода (например, "en", "ru")
  string name = 3;            // Название перевода
  int32 type = 4;             // Тип перевода (например, "noun", "verb")
  repeated Sentence sentences = 5; // Список предложений
}

// Структура предложения
message Sentence {
  string text_ru = 1;         // Текст на русском
  string text_en = 2;         // Текст на английском
}
