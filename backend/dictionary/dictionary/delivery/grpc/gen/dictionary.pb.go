// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: proto/dictionary.proto

package dictionary

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос для получения случайных словарей
type GetRandomDictionariesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"` // Количество возвращаемых словарей
	Lang  string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`    // Язык словарей (например, "en", "ru")
}

func (x *GetRandomDictionariesRequest) Reset() {
	*x = GetRandomDictionariesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dictionary_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRandomDictionariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRandomDictionariesRequest) ProtoMessage() {}

func (x *GetRandomDictionariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dictionary_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRandomDictionariesRequest.ProtoReflect.Descriptor instead.
func (*GetRandomDictionariesRequest) Descriptor() ([]byte, []int) {
	return file_proto_dictionary_proto_rawDescGZIP(), []int{0}
}

func (x *GetRandomDictionariesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRandomDictionariesRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

// Ответ с массивом словарей
type GetRandomDictionariesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dictionaries []*Dictionary `protobuf:"bytes,1,rep,name=dictionaries,proto3" json:"dictionaries,omitempty"` // Список словарей
}

func (x *GetRandomDictionariesResponse) Reset() {
	*x = GetRandomDictionariesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dictionary_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRandomDictionariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRandomDictionariesResponse) ProtoMessage() {}

func (x *GetRandomDictionariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dictionary_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRandomDictionariesResponse.ProtoReflect.Descriptor instead.
func (*GetRandomDictionariesResponse) Descriptor() ([]byte, []int) {
	return file_proto_dictionary_proto_rawDescGZIP(), []int{1}
}

func (x *GetRandomDictionariesResponse) GetDictionaries() []*Dictionary {
	if x != nil {
		return x.Dictionaries
	}
	return nil
}

// Запрос на получение словарей по ID
type GetDictionariesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"` // Список ID словарей
}

func (x *GetDictionariesRequest) Reset() {
	*x = GetDictionariesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dictionary_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictionariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictionariesRequest) ProtoMessage() {}

func (x *GetDictionariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dictionary_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictionariesRequest.ProtoReflect.Descriptor instead.
func (*GetDictionariesRequest) Descriptor() ([]byte, []int) {
	return file_proto_dictionary_proto_rawDescGZIP(), []int{2}
}

func (x *GetDictionariesRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// Ответ с массивом словарей
type GetDictionariesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dictionaries []*Dictionary `protobuf:"bytes,1,rep,name=dictionaries,proto3" json:"dictionaries,omitempty"` // Список словарей
}

func (x *GetDictionariesResponse) Reset() {
	*x = GetDictionariesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dictionary_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictionariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictionariesResponse) ProtoMessage() {}

func (x *GetDictionariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dictionary_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictionariesResponse.ProtoReflect.Descriptor instead.
func (*GetDictionariesResponse) Descriptor() ([]byte, []int) {
	return file_proto_dictionary_proto_rawDescGZIP(), []int{3}
}

func (x *GetDictionariesResponse) GetDictionaries() []*Dictionary {
	if x != nil {
		return x.Dictionaries
	}
	return nil
}

// Структура словаря
type Dictionary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                    // Идентификатор словаря
	Lang         string         `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`                 // Язык словаря (например, "en", "ru")
	Name         string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                 // Название словаря
	Type         int32          `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`                // Тип словаря (например, "noun", "verb")
	Translations []*Translation `protobuf:"bytes,5,rep,name=translations,proto3" json:"translations,omitempty"` // Список переводов
	Sentences    []*Sentence    `protobuf:"bytes,6,rep,name=sentences,proto3" json:"sentences,omitempty"`       // Список предложений
}

func (x *Dictionary) Reset() {
	*x = Dictionary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dictionary_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dictionary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dictionary) ProtoMessage() {}

func (x *Dictionary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dictionary_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dictionary.ProtoReflect.Descriptor instead.
func (*Dictionary) Descriptor() ([]byte, []int) {
	return file_proto_dictionary_proto_rawDescGZIP(), []int{4}
}

func (x *Dictionary) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Dictionary) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Dictionary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dictionary) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Dictionary) GetTranslations() []*Translation {
	if x != nil {
		return x.Translations
	}
	return nil
}

func (x *Dictionary) GetSentences() []*Sentence {
	if x != nil {
		return x.Sentences
	}
	return nil
}

// Структура перевода
type Translation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`              // Идентификатор словаря
	Lang      string      `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`           // Язык перевода (например, "en", "ru")
	Name      string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`           // Название перевода
	Type      int32       `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`          // Тип перевода (например, "noun", "verb")
	Sentences []*Sentence `protobuf:"bytes,5,rep,name=sentences,proto3" json:"sentences,omitempty"` // Список предложений
}

func (x *Translation) Reset() {
	*x = Translation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dictionary_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Translation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Translation) ProtoMessage() {}

func (x *Translation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dictionary_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Translation.ProtoReflect.Descriptor instead.
func (*Translation) Descriptor() ([]byte, []int) {
	return file_proto_dictionary_proto_rawDescGZIP(), []int{5}
}

func (x *Translation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Translation) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Translation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Translation) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Translation) GetSentences() []*Sentence {
	if x != nil {
		return x.Sentences
	}
	return nil
}

// Структура предложения
type Sentence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextRu string `protobuf:"bytes,1,opt,name=text_ru,json=textRu,proto3" json:"text_ru,omitempty"` // Текст на русском
	TextEn string `protobuf:"bytes,2,opt,name=text_en,json=textEn,proto3" json:"text_en,omitempty"` // Текст на английском
}

func (x *Sentence) Reset() {
	*x = Sentence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dictionary_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sentence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sentence) ProtoMessage() {}

func (x *Sentence) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dictionary_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sentence.ProtoReflect.Descriptor instead.
func (*Sentence) Descriptor() ([]byte, []int) {
	return file_proto_dictionary_proto_rawDescGZIP(), []int{6}
}

func (x *Sentence) GetTextRu() string {
	if x != nil {
		return x.TextRu
	}
	return ""
}

func (x *Sentence) GetTextEn() string {
	if x != nil {
		return x.TextEn
	}
	return ""
}

var File_proto_dictionary_proto protoreflect.FileDescriptor

var file_proto_dictionary_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x48, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x44,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x5b, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x0c, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x0c, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x0c, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x79, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x0c,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0xc9, 0x01, 0x0a,
	0x0a, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x73,
	0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x73,
	0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x75, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x78, 0x74, 0x52, 0x75, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x32, 0xaf, 0x02, 0x0a, 0x11, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x98, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x44, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x2f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x7f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x2f, 0x67, 0x65,
	0x6e, 0x3b, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dictionary_proto_rawDescOnce sync.Once
	file_proto_dictionary_proto_rawDescData = file_proto_dictionary_proto_rawDesc
)

func file_proto_dictionary_proto_rawDescGZIP() []byte {
	file_proto_dictionary_proto_rawDescOnce.Do(func() {
		file_proto_dictionary_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dictionary_proto_rawDescData)
	})
	return file_proto_dictionary_proto_rawDescData
}

var file_proto_dictionary_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_dictionary_proto_goTypes = []interface{}{
	(*GetRandomDictionariesRequest)(nil),  // 0: dictionary.GetRandomDictionariesRequest
	(*GetRandomDictionariesResponse)(nil), // 1: dictionary.GetRandomDictionariesResponse
	(*GetDictionariesRequest)(nil),        // 2: dictionary.GetDictionariesRequest
	(*GetDictionariesResponse)(nil),       // 3: dictionary.GetDictionariesResponse
	(*Dictionary)(nil),                    // 4: dictionary.Dictionary
	(*Translation)(nil),                   // 5: dictionary.Translation
	(*Sentence)(nil),                      // 6: dictionary.Sentence
}
var file_proto_dictionary_proto_depIdxs = []int32{
	4, // 0: dictionary.GetRandomDictionariesResponse.dictionaries:type_name -> dictionary.Dictionary
	4, // 1: dictionary.GetDictionariesResponse.dictionaries:type_name -> dictionary.Dictionary
	5, // 2: dictionary.Dictionary.translations:type_name -> dictionary.Translation
	6, // 3: dictionary.Dictionary.sentences:type_name -> dictionary.Sentence
	6, // 4: dictionary.Translation.sentences:type_name -> dictionary.Sentence
	0, // 5: dictionary.DictionaryService.GetRandomDictionaries:input_type -> dictionary.GetRandomDictionariesRequest
	2, // 6: dictionary.DictionaryService.GetDictionaries:input_type -> dictionary.GetDictionariesRequest
	1, // 7: dictionary.DictionaryService.GetRandomDictionaries:output_type -> dictionary.GetRandomDictionariesResponse
	3, // 8: dictionary.DictionaryService.GetDictionaries:output_type -> dictionary.GetDictionariesResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_dictionary_proto_init() }
func file_proto_dictionary_proto_init() {
	if File_proto_dictionary_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dictionary_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRandomDictionariesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dictionary_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRandomDictionariesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dictionary_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictionariesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dictionary_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictionariesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dictionary_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dictionary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dictionary_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Translation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dictionary_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sentence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dictionary_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dictionary_proto_goTypes,
		DependencyIndexes: file_proto_dictionary_proto_depIdxs,
		MessageInfos:      file_proto_dictionary_proto_msgTypes,
	}.Build()
	File_proto_dictionary_proto = out.File
	file_proto_dictionary_proto_rawDesc = nil
	file_proto_dictionary_proto_goTypes = nil
	file_proto_dictionary_proto_depIdxs = nil
}
